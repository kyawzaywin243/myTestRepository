var fs= require('fs');
let createDb=(link)=>{
var dir='./database';
if (!fs.existsSync(dir)){
    fs.mkdirSync(dir);
    fs.writeFile('./database/db.js',`
const mongoose = require('mongoose');
let url = '${link}';
const connect = mongoose.connect(url, { useNewUrlParser: true }); 

`
,function (err) {
    if (err) throw err;
    console.log('saved')
  })
    
}else{
  

fs.appendFile('./database/db.js',`
const mongoose = require('mongoose');
let url = '${link}';
const connect = mongoose.connect(url, { useNewUrlParser: true }); 

`
,function (err) {
    if (err) throw err;
    console.log('saved')
  })
}}


let createUser=()=>{

    fs.writeFile('./database/user.js',`
    let db = require('./db');
let User = db.User;



let save = (obj) => {
    return new Promise((resolve, reject) => {
      
        obj["since"] = new Date();
        let user = new User(obj);
        user.save((err, res) => {
            if (err) reject(err);
            resolve(res);
        })
    })
}


let all = () => {
    return new Promise((resolve, reject) => {
        User.find({}, (err, data) => {
            if (err) reject(err);
            resolve(data);
        })
    })
};


let findUserById = (id) => {
    return new Promise((resolve, reject) => {
        User.findById(id, (err, res) => {
            if (err) reject(err);
            resolve(res);
        })
    })
};

let findByEmail = (email) => {
    return new Promise((resolve, reject) => {
        User.findOne({ "email": email}, (err, result) => {
            if (err) reject(err);
            resolve(result);
        })
    })
}

let update = (obj) => {
    return new Promise((resolve, reject) => {
        User.findOne({ email: obj.email }, (err, data) => {
            if (err) {
                reject(err)
            } else {
                data.ppImage=obj.ppName;
                data.name= obj.name;
                data.password = obj.password;
               
                data.save((err, dat) => {
                    if (err) {
                        reject(err);
                    } else {
                        resolve(dat);
                    }
                });
            }
        })
    })
};
module.exports = {
    save,
    all,
    findUserById,
    findByEmail,
    update
}
    `
    ,function (err) {
        if (err) throw err;
        console.log('saved')
      })
}

let createTbOne=(tableName,variableName,tableOne)=>{

    fs.appendFile('./database/db.js',`
    let Schema = mongoose.Schema;

let FirstScheme = new Schema({
 ${tableOne}
    
})
let ${variableName} = mongoose.model('${tableName}', FirstScheme);
module.exports = {
    ${variableName},
    
   }
    `
    ,function (err) {
        if (err) throw err;
        console.log('saved')
      })
}


let createTbTwo=(tableOneName,variableOneName,tableTwoName,variableTwoName,tableOne,tableTwo,)=>{

  fs.appendFile('./database/db.js',`
  let Schema = mongoose.Schema;

let FirstScheme = new Schema({
${tableOne}
  
})
let SecondScheme = new Schema({
  ${tableTwo}
    
  })
let ${variableOneName} = mongoose.model('${tableOneName}', FirstScheme);
let ${variableTwoName} = mongoose.model('${tableTwoName}', SecondScheme);

module.exports = {
  ${variableOneName},
  ${variableTwoName},
 }
  `
  ,function (err) {
      if (err) throw err;
      console.log('saved')
    })
}



let createTbThree=(tableOneName,variableOneName,tableTwoName,variableTwoName,tableThreeName,variableThreeName,tableOne,tableTwo,tableThree)=>{

  fs.appendFile('./database/db.js',`
  let Schema = mongoose.Schema;

let FirstScheme = new Schema({
${tableOne}
  
})
let SecondScheme = new Schema({
  ${tableTwo}   
  })

let ThreeScheme = new Schema({
    ${tableThree}   
})

let ${variableOneName} = mongoose.model('${tableOneName}', FirstScheme);
let ${variableTwoName} = mongoose.model('${tableTwoName}', SecondScheme);
let ${variableThreeName} = mongoose.model('${tableThreeName}', ThreeScheme);

module.exports = {
  ${variableOneName},
  ${variableTwoName},
  ${variableThreeName}
 }
  `
  ,function (err) {
      if (err) throw err;
      console.log('saved')
    })
}
module.exports = {
    createDb,
    createTbOne,
    createTbTwo,
    createTbThree,
    createUser
   }